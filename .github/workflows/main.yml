name: SukiSU-Xposed_Kernel

on:
  workflow_dispatch:
    inputs:
      KERNEL_REPO:
        description: 'Link repo kernel'
        required: true
        default: 'https://github.com/TegarXLu/Templar-Kernel-GKI-5.10'
      KERNEL_BRANCH:
        description: 'Branch kernel'
        required: true
        default: 'Templar'
      BUILD_SUKISU:
        description: 'Build SukiSU variant'
        type: boolean
        default: false
      RELEASE:
        description: 'Release kernel?'
        type: boolean
        default: false

jobs:
  set-date:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.getdate.outputs.date }}
    steps:
      - name: Get Current Date
        id: getdate
        run: echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set build matrix
        id: set-matrix
        run: |
          MATRIX='['
          if [ "${{ github.event.inputs.BUILD_SUKISU }}" == "true" ]; then
            MATRIX+='{"name":"sukisu"},'
          fi
          MATRIX="${MATRIX%,}]"
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  build:
    needs: [setup-matrix]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    name: Build ${{ matrix.name }}

    steps:
      - name: Set up dependencies
        run: |
          sudo apt update
          sudo apt install -y git wget curl build-essential bc bison \
            flex libssl-dev libncurses-dev libelf-dev ccache python3 unzip zip

      - name: Create Swap
        run: |
          sudo fallocate -l 10G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      - name: Clone Kernel Source
        run: |
          git clone --depth=1 ${{ github.event.inputs.KERNEL_REPO }} -b ${{ github.event.inputs.KERNEL_BRANCH }} kernel
      
      - name: Setup Worktree (for suksiu)
        if: matrix.name != 'noroot'
        run: |
          cd kernel
          git config user.name "lua ser ofc"
          git config user.email "loveirfan363@gmail.com"
          git branch -f temp-${{ matrix.name }} ${{ github.event.inputs.KERNEL_BRANCH }}
          git worktree add ../${{ matrix.name }} temp-${{ matrix.name }}
          git clone https://github.com/ShirkNeko/SukiSU_patch.git
     
      - name: Inject Variant Patch (SukiSU)
        run: |
          if [[ "${{ matrix.name }}" == "sukisu" ]]; then
            cd sukisu
            curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main
            git clone https://gitlab.com/simonpunk/susfs4ksu/ -b gki-android12-5.10 ../sus
            cp -r ../sus/kernel_patches/fs . && cp -r ../sus/kernel_patches/include . && cp ../sus/kernel_patches/50_add_susfs_in_gki-android12-5.10.patch .
            patch -p1 < 50_add_susfs_in_gki-android12-5.10.patch
          fi
          
      - name: Download Clang
        run: |
          mkdir clang
          wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/d0e0a3882edb1acc193263ae98fce706e82aca38/clang-r574158.tar.gz -O clang.tar.gz
          tar -xf clang.tar.gz -C clang

      - name: Verify Clang availability
        run: |
          export PATH=$GITHUB_WORKSPACE/clang/bin:$PATH
          clang --version || exit 1
      
      - name: Set CONFIG_LOCALVERSION
        run: |
          if [[ "${{ matrix.name }}" == "sukisu" ]]; then
            DEFCONFIG=sukisu/arch/arm64/configs/gki_defconfig
            VERSION="-xposed"
          fi
          sed -i '/CONFIG_LOCALVERSION/d' $DEFCONFIG
          echo "CONFIG_LOCALVERSION=\"$VERSION\"" >> $DEFCONFIG
      
      - name: Append CONFIG_HZ_300 and CONFIG_HZ=300 to defconfig
        run: |
          echo -e '\nCONFIG_HZ_300=y\nCONFIG_HZ=300' >> kernel/arch/arm64/configs/gki_defconfig
      
      - name: Build Kernel
        run: |
          cd ${{ matrix.name == 'sukisu' && 'kernel' || matrix.name }}
          export ARCH=arm64
          export SUBARCH=arm64
          export CLANG_PATH=$GITHUB_WORKSPACE/clang
          export PATH=$CLANG_PATH/bin:$PATH
          set -e
          export CC=clang
          export CXX=clang++
          export LD=ld.lld
          export AR=llvm-ar
          export NM=llvm-nm
          export OBJCOPY=llvm-objcopy
          export OBJDUMP=llvm-objdump
          export STRIP=llvm-strip
          export HOSTCC=clang
          export HOSTCXX=clang++
          export CROSS_COMPILE=aarch64-linux-gnu-
          export LLVM=1
          export LLVM_IAS=1
          export LTO=full
          make O=out ARCH=arm64 gki_defconfig
          make -j$(nproc) O=out ARCH=arm64 LLVM=1 LLVM_IAS=1 LTO=full
      
      - name: Verify SUSFS Patch
        run: |
          echo "🔍 Verifying SUSFS in built kernel config..."
          if [[ "${{ matrix.name }}" == "sukisu" ]]; then
            CONFIG=kernel/out/.config
          else
            CONFIG=${{ matrix.name }}/out/.config
          fi
          grep -q "CONFIG_KSU=y" "$CONFIG" && echo "✅ CONFIG_KSU found!" || echo "❌ CONFIG_KSU not found!"
          grep -q "CONFIG_KSU_SUSFS=y" "$CONFIG" && echo "✅ CONFIG_KSU_SUSFS found!" || echo "❌ CONFIG_KSU_SUSFS not found!"
          grep -q "CONFIG_SECURITYFS=y" "$CONFIG" && echo "✅ CONFIG_SECURITYFS found!" || echo "❌ CONFIG_SECURITYFS not found!"

      - name: Package Kernel with AnyKernel3
        id: zipkernel
        run: |
          set -euo pipefail
          DATE=$(date +%Y%m%d)
          if [[ "${{ matrix.name }}" == "noroot" ]]; then
            ZIP_NAME="XposedHook-GKI-${DATE}.zip"
            OUT_DIR="kernel"
          elif [[ "${{ matrix.name }}" == "sukisu" ]]; then
            ZIP_NAME="XposedHook-GKI-SukiSU+SUSFS-${DATE}.zip"
            OUT_DIR="sukisu"
          else
            echo "Unknown matrix name: ${{ matrix.name }}"
            exit 1
          fi
          KBOOT_DIR="home/runner/work/Sukisu_build/Sukisu_build/kernel/out"
          git clone https://github.com/TegarXLu/AnyKernel3
          if [ -f "$KBOOT_DIR/Image.gz" ]; then
            cp "$KBOOT_DIR/Image.gz" AnyKernel3/
          elif [ -f "$KBOOT_DIR/Image.gz-dtb" ]; then
            cp "$KBOOT_DIR/Image.gz-dtb" AnyKernel3/Image.gz
          elif [ -f "$KBOOT_DIR/Image" ]; then
            gzip -c "$KBOOT_DIR/Image" > AnyKernel3/Image.gz
          elif [ -f "$KBOOT_DIR/Image-dtb" ]; then
            gzip -c "$KBOOT_DIR/Image-dtb" > AnyKernel3/Image.gz-dtb
          else
            echo "ERROR: No kernel image found in $KBOOT_DIR"
            exit 1
          fi
          cp "$KBOOT_DIR"/*.dtb AnyKernel3/ 2>/dev/null || true
          cp "$KBOOT_DIR"/*.dtbo AnyKernel3/ 2>/dev/null || true
          cd AnyKernel3
          zip -r9 "../$ZIP_NAME" ./*
          echo "zip_name=$ZIP_NAME" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.zipkernel.outputs.zip_name }}
          path: ${{ steps.zipkernel.outputs.zip_name }}

  finalize:
    needs: [set-date, build]
    runs-on: ubuntu-latest
    outputs:
      date: ${{ needs.set-date.outputs.date }}
    steps:
      - name: Dummy Finalize
        run: echo "Finalize completed"

  release:
    needs: [finalize]
    if: ${{ github.event.inputs.RELEASE == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Generate Release Notes
        run: |
          echo "🔧 **xposed Hook GKI Release**" > release.txt
          if [[ "${{ github.event.inputs.BUILD_SUKISU }}" == "true" ]]; then
            echo "- 🦊 xposed-GKI-SukiSU+SUSFS: With root SukiSU + SUSFS" >> release.txt
          fi
          echo "" >> release.txt
          echo "📝 **Notes:**" >> release.txt
          echo "- Based on AOSP GKI 5.10" >> release.txt
          echo "- SUSFS patch applied on SukiSU" >> release.txt
          echo "- Can be used on GKI-based devices (Android 12-5.10)" >> release.txt
          echo "" >> release.txt
          echo "📄 <b>Full changelog</b>: [Here](${{ github.event.inputs.KERNEL_REPO }}/commits/${{ github.event.inputs.KERNEL_BRANCH }})" >> release.txt
          echo "💬 Bug reports: [Support Group](https://t.me/xposedhook)" >> release.txt
          echo "" >> release.txt
          if ls artifacts/*.txt 1> /dev/null 2>&1; then
            echo "📄 **Build Info:**" >> release.txt
            cat artifacts/*.txt >> release.txt
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: xposedhook-GKI-${{ needs.finalize.outputs.date }}
          name: Xposed Hook GKI - ${{ needs.finalize.outputs.date }}
          body_path: release.txt
          files: |
            artifacts/*.zip
            artifacts/*.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
